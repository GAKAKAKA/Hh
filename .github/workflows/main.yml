# ------------------------------------------ ‡∏´‡πâ‡∏≤‡∏°‡∏Å‡πä‡∏≠‡∏õ
from colorama import Back, Fore, Style
import os
import json
from requests import post, Session, get
from random import choice
import random
import threading
from discord.ext import commands
import requests as ru
import discord
from discord import ui
import time
import platform
from datetime import datetime
import pytz
import asyncio
import socket
from discord import app_commands
from discord_webhooks import DiscordWebhooks
from discord.ext.commands import Bot
import aiohttp
import uuid
from typing import Literal
import json
from bs4 import BeautifulSoup as bs
from pystyle import Colors, Colorate
import itertools
from discord import SyncWebhook
import requests
from re import match
import sys
import subprocess
import itertools
from discord import Activity, ActivityType, Status
from datetime import datetime, timedelta

utc_now = datetime.utcnow()
timezone_offset = timedelta(hours=7)
local_time = utc_now + timezone_offset

delay = 5 ## DELAY ‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° 
LOG_ID = 1201827866959159316 # LOG ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°
TOKEN = "" # TOKEN BOT

## DELAY BOT (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
VFYDELAY = 1800 #‡∏ö‡∏≠‡∏ó‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô
STATUSDELAY = 1800 #‡∏ö‡∏≠‡∏ó‡πÄ‡∏°‡πá‡∏î‡∏°‡πà‡∏ß‡∏á
NUKEBOT = 180 #‡∏ö‡∏≠‡∏ó‡∏¢‡∏¥‡∏á‡∏î‡∏¥‡∏™

formatted_time = local_time.strftime("%Y-%m-%d %H:%M:%S")
avatarbot = "https://cdn.discordapp.com/attachments/1187996016591507477/1193534450357776484/vecteezy_discord-logo-png-discord-icon-transparent-png_18930680_825.webp?ex=65ad1093&is=659a9b93&hm=af0b44f34612c4a7f9a7ea858849d5ff0414d09af9efcc2aa735098ec7d140ab&"
Alert = "> ‚ö†Ô∏è  ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏Ñ‡∏∞ "

class VfyBot(ui.Modal, title="‡∏ö‡∏≠‡∏ó‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô"):
    token = ui.TextInput(
        label="MTI5Njc1NDE3MzM1Mzc4NzM5Mg.G9b7v8.f9g1_x9rky2BRtkVLLdLE6UmS93hj1TFiMqbgY",
        placeholder="NzYwMTI1MDA2NDI4MjQxOTUy.X3Hfkw.EjIL6vI9XPHvhp9mmh6XZf7RoMo",
        style=discord.TextStyle.long
    )
    id_log = ui.TextInput(
        label="1251872011056058378",
        placeholder="1193168506833883237",
        style=discord.TextStyle.short
    )    
    role_id = ui.TextInput(
        label="1237992967772569661",
        placeholder="1192448692398084116",
        style=discord.TextStyle.short
    )    
    async def on_submit(self, interaction: discord.Interaction):
        token = self.token.value
        id_log = self.id_log.value
        role_id = self.role_id.value

        if not is_valid_token(token):
            await interaction.response.send_message("Token ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÇ‡∏õ‡∏£‡∏î ‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏∞", ephemeral=True)
            return

        try:
        # Send a response to the user using ephemeral message
            await interaction.response.send_message(f"Host ‡∏ö‡∏≠‡∏ó‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô : `{token}`\nUsed by: {interaction.user.mention}", ephemeral=True)
            channel = client.get_channel(LOG_ID)
            user = interaction.user
            embed = discord.Embed(title="ü§ñ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ö‡∏≠‡∏ó", description=f"\nüë§ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô : {interaction.user.mention} \n\nüßëüèª‚Äçüíª ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° : ‡∏ö‡∏≠‡∏ó‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô\n\n ‚è≤Ô∏è ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô : {VFYDELAY // 60} ‡∏ô‡∏≤‡∏ó‡∏µ", color=0x15ff00)
            embed.set_author(name="BOT RUN SCRIPT HOSTING", url="", icon_url=avatarbot)   
            embed.set_thumbnail(url=user.avatar.url)
            embed.set_footer(text=f"‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ {formatted_time}")
            embed.set_image(url="https://media.discordapp.net/attachments/1187996016591507477/1193284620624609310/standard_3.gif?ex=65ac27e7&is=6599b2e7&hm=a174e7ed5c033eb4a320385bf302767e200af78541ce978340523075fa6de16e&=&width=585&height=75")
            message1 = await channel.send(content="**üü¢ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ö‡∏≠‡∏ó‡∏Ñ‡∏∞ ... **",embed=embed)
            # Execute a command using subprocess
            process = subprocess.Popen(["python", "Verify1.py", token, id_log, role_id])
            await asyncio.sleep(5)
            await message1.edit(content="**üü¢ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô  **", embed=embed)

            # Schedule a task to cancel the subprocess after a specified time (e.g., 3600 seconds)
            await asyncio.sleep(VFYDELAY)
            process.terminate()

            await message1.edit(content="**üî¥ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô (‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÅ‡∏•‡πâ‡∏ß)**", embed=embed)

        except Exception as e:
              await interaction.followup.send(f"Error starting subprocess: {e}", ephemeral=True)
def is_valid_token(token):
    return len(token) == 72
class HostStatus(ui.Modal, title="‡∏ö‡∏≠‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏°‡πá‡∏î‡∏°‡πà‡∏ß‡∏á"):
    token = ui.TextInput(
        label="‡πÉ‡∏™‡πà TOKEN ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó",
        placeholder="NzYwMTI1MDA2NDI4MjQxOTUy.X3Hfkw.EjIL6vI9XPHvhp9mmh6XZf7RoMo",
        style=discord.TextStyle.short
    )
    name = ui.TextInput(
        label="‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á ‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™",
        placeholder="‡∏´‡∏•‡πà‡∏≠‡πÄ‡∏ü‡∏µ‡πâ‡∏¢‡∏ß‡∏ß‡∏ß !!!",
        style=discord.TextStyle.long
    )

    async def on_submit(self, interaction: discord.Interaction):
        token = self.token.value
        name = self.name.value

        # Validate the token
        if not is_valid_token(token):
            await interaction.response.send_message("Token ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÇ‡∏õ‡∏£‡∏î ‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏∞", ephemeral=True)
            return

        try:
            # Send a response to the user using ephemeral message
            await interaction.response.send_message(f"**Host ‡∏ö‡∏≠‡∏ó‡πÄ‡∏°‡πá‡∏î‡∏°‡πà‡∏ß‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à : **`{token}`\n STATUS NAME : {name}", ephemeral=True)
            channel = client.get_channel(LOG_ID)
            user = interaction.user
            embed = discord.Embed(title="ü§ñ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ö‡∏≠‡∏ó", description=f"\nüë§ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô : {interaction.user.mention} \n\nüßëüèª‚Äçüíª ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° : ‡∏ö‡∏≠‡∏ó‡πÄ‡∏°‡πá‡∏î‡∏°‡πà‡∏ß‡∏á\n\n ‚è≤Ô∏è ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô : {STATUSDELAY//60} ‡∏ô‡∏≤‡∏ó‡∏µ", color=0x15ff00)
            embed.set_author(name="BOT RUN SCRIPT HOSTING", url="", icon_url=avatarbot)   
            embed.set_thumbnail(url=user.avatar.url)
            embed.set_footer(text=f"‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ {formatted_time}")
            embed.set_image(url="https://media.discordapp.net/attachments/1187996016591507477/1193284620624609310/standard_3.gif?ex=65ac27e7&is=6599b2e7&hm=a174e7ed5c033eb4a320385bf302767e200af78541ce978340523075fa6de16e&=&width=585&height=75")
            message1 = await channel.send(content="**üü¢ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ö‡∏≠‡∏ó‡∏Ñ‡∏∞ ... **",embed=embed)
            # Execute a command using subprocess
            process = subprocess.Popen(["python", "bot2.py", token, name])
            await asyncio.sleep(5)
            await message1.edit(content="**üü¢ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô  **", embed=embed)

            # Schedule a task to cancel the subprocess after a specified time (e.g., 3600 seconds)
            await asyncio.sleep(STATUSDELAY)
            process.terminate()

            await message1.edit(content="**üî¥ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô (‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÅ‡∏•‡πâ‡∏ß)**", embed=embed)


        except Exception as e:
            # Handle any other exceptions that might occur
            await interaction.response.send_message(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", ephemeral=True)

class botnuke(ui.Modal, title="‡∏ö‡∏≠‡∏ó‡∏¢‡∏¥‡∏á‡∏î‡∏¥‡∏™"):
    token = ui.TextInput(
        label="‡πÉ‡∏™‡πà TOKEN ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó",
        placeholder="NzYwMTI1MDA2NDI4MjQxOTUy.X3Hfkw.EjIL6vI9XPHvhp9mmh6XZf7RoMo",
        style=discord.TextStyle.short
    )
    async def on_submit(self, interaction: discord.Interaction):
        token = self.token.value

        # Validate the token
        if not is_valid_token(token):
            await interaction.response.send_message("Token ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÇ‡∏õ‡∏£‡∏î ‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏∞", ephemeral=True)
            return

        try:
            # Send a response to the user using ephemeral message
            await interaction.response.send_message(f"**Host ‡∏ö‡∏≠‡∏ó‡∏¢‡∏¥‡∏á‡∏î‡∏¥‡∏™ : **`{token}`\n COMMANDS : !setup\n ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ : {NUKEBOT} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ", ephemeral=True)
            channel = client.get_channel(LOG_ID)
            user = interaction.user
            embed = discord.Embed(title="ü§ñ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ö‡∏≠‡∏ó", description=f"\nüë§ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô : {interaction.user.mention} \n\nüßëüèª‚Äçüíª ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° : ‡∏ö‡∏≠‡∏ó‡∏¢‡∏¥‡∏á‡∏î‡∏¥‡∏™\n\n ‚è≤Ô∏è ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô : {NUKEBOT // 60} ‡∏ô‡∏≤‡∏ó‡∏µ", color=0x15ff00)
            embed.set_author(name="BOT RUN SCRIPT HOSTING", url="", icon_url=avatarbot)   
            embed.set_thumbnail(url=user.avatar.url)
            embed.set_footer(text=f"‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ {formatted_time}")
            embed.set_image(url="https://media.discordapp.net/attachments/1187996016591507477/1193284620624609310/standard_3.gif?ex=65ac27e7&is=6599b2e7&hm=a174e7ed5c033eb4a320385bf302767e200af78541ce978340523075fa6de16e&=&width=585&height=75")
            message1 = await channel.send(content="**üü¢ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ö‡∏≠‡∏ó‡∏Ñ‡∏∞ ... **",embed=embed)
            # Execute a command using subprocess
            process = subprocess.Popen(["python", "botnuke.py", token])
            await asyncio.sleep(5)
            await message1.edit(content="**üü¢ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô  **", embed=embed)

            # Schedule a task to cancel the subprocess after a specified time (e.g., 3600 seconds)
            await asyncio.sleep(NUKEBOT)
            process.terminate()

            await message1.edit(content="**üî¥ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô (‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÅ‡∏•‡πâ‡∏ß)**", embed=embed)


        except Exception as e:
            # Handle any other exceptions that might occur
            await interaction.response.send_message(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}", ephemeral=True)


class bot_button(discord.ui.View):
    def __init__(self) -> None:
        super().__init__(timeout=None)
        self.value = None
        self.cooldown = commands.CooldownMapping.from_cooldown(1, delay, commands.BucketType.user)

    @discord.ui.button(label="‡∏ö‡∏≠‡∏ó‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô", emoji="<:PandaLove:1187994076562333838> ", style=discord.ButtonStyle.green, custom_id="ui_button1")
    async def bot_button1(self, interaction: discord.Interaction, button: discord.ui.Button):
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Cooldown
        bucket = self.cooldown.get_bucket(interaction.message)
        retry_after = bucket.update_rate_limit()

        if retry_after:
            # ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Cooldown ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
            await interaction.response.send_message(f"> üìä ‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å‡∏£‡∏≠‡∏ö‡πÉ‡∏ô {round(retry_after, 1)} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ !!", ephemeral=True)
        else:
            # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Cooldown ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Modal
            await interaction.response.send_modal(VfyBot())      

    @discord.ui.button(label="‡∏ö‡∏≠‡∏ó‡πÄ‡∏°‡πá‡∏î‡∏°‡πà‡∏ß‡∏á", emoji="<:__:1187994008530722896> ", style=discord.ButtonStyle.red, custom_id="ui_button2")
    async def bot_button2(self, interaction: discord.Interaction, button: discord.ui.Button):
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Cooldown
        bucket = self.cooldown.get_bucket(interaction.message)
        retry_after = bucket.update_rate_limit()

        if retry_after:
            # ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Cooldown ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
            await interaction.response.send_message(f"> üìä ‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å‡∏£‡∏≠‡∏ö‡πÉ‡∏ô {round(retry_after, 1)} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ !!", ephemeral=True)
        else:
            # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Cooldown ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Modal
            await interaction.response.send_modal(HostStatus())      
        


    @discord.ui.button(label="‡∏ö‡∏≠‡∏ó‡∏¢‡∏¥‡∏á‡∏î‡∏¥‡∏™ NukeBot", emoji="<:Yes:1187994016269205604> ", style=discord.ButtonStyle.primary, custom_id="ui_button3")
    async def bot_button3(self, interaction: discord.Interaction, button: discord.ui.Button):
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Cooldown
        bucket = self.cooldown.get_bucket(interaction.message)
        retry_after = bucket.update_rate_limit()

        if retry_after:
            # ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Cooldown ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
            await interaction.response.send_message(f"> üìä ‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å‡∏£‡∏≠‡∏ö‡πÉ‡∏ô {round(retry_after, 1)} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ !!", ephemeral=True)
        else:
            # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Cooldown ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Modal
            await interaction.response.send_modal(botnuke())   



class aclient(commands.Bot):    
    def __init__(self): 
        super().__init__(command_prefix=commands.when_mentioned_or('.'), intents=discord.Intents().all())
        self.role = None

    async def on_ready(self):
        prfx = (Back.BLACK + Fore.GREEN + time.strftime("%H:%M:%S UTC", time.gmtime()) + Back.RESET + Fore.WHITE + Style.BRIGHT)
        activity = discord.Streaming(name="SlashCommands", url="https://www.twitch.tv/yanglarkdeveloper")
        await client.change_presence(status=discord.Status.idle, activity=activity)
        print(prfx + " Logged in as " + Fore.YELLOW + self.user.name)
        print(prfx + " Bot ID " + Fore.YELLOW + str(self.user.id))
        print(prfx + " Discord Version " + Fore.YELLOW + discord.__version__)
        print(prfx + " Python Version " + Fore.YELLOW + str(platform.python_version()))
        synced = await self.tree.sync()
        print(prfx + " Slash CMDs Synced " + Fore.YELLOW + str(len(synced)) + " Commands")
        self.add_view(bot_button())



client = aclient()


@client.tree.command(name='setupbotmenu', description='‡πÉ‡∏™‡πà ID CHANNEL (ADMINONLY)')
@app_commands.checks.has_permissions(administrator=True)
@app_commands.describe(channel_id='‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á 1193256543974592574')
async def bot(interaction: commands.Context, channel_id: str): 
      embed=discord.Embed(title="‡∏ö‡∏≠‡∏ó‡∏î‡∏¥‡∏™‡∏Ñ‡∏≠‡∏£‡πå‡∏î‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û", description="`üé¥` `:` ‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏ó‡πÄ‡∏Ñ‡πâ‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ö‡∏≠‡∏ó‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏•‡∏¢\n\n`‚úÖ` `:` ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏≥‡πÇ‡∏ó‡πÄ‡∏Ñ‡πâ‡∏ô‡πÑ‡∏õ‡πÑ‡∏ß‡πâ‡πÄ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ô‡∏≥‡πÑ‡∏õ‡∏Å‡∏•‡∏±‡πà‡∏ô‡πÅ‡∏Å‡∏•‡πâ‡∏á‡πÉ‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô", color=0xff2c2c)
      embed.add_field(name="", value="```diff\n-  ‡∏≠‡∏¢‡πà‡∏≤‡∏Å‡∏î‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ö‡∏≠‡∏ó‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ ‡∏ï‡πà‡∏≠‡∏Ñ‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô \n```", inline=True)
      embed.set_author(name="BOT RUN SCRIPT HOSTING", url="", icon_url=avatarbot)
      embed.set_image(url="https://media.discordapp.net/attachments/1187996016591507477/1188009336736317510/standard.gif?ex=65ab6bea&is=6598f6ea&hm=b370c07bc549b335c3eda075141108a5496ff643a45b3372eceaecc9ccf7d54e&=&width=850&height=302")
      channel = client.get_channel(int(channel_id))
      await interaction.response.send_message(f'‡πÑ‡∏î‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ö‡∏ô‡∏´‡πâ‡∏≠‡∏á <#{channel_id}>', ephemeral=True)
      await channel.send(embed=embed,view=bot_button())
@bot.error
async def bot_error(interaction: discord.Interaction, error):
        if isinstance(error, app_commands.errors.MissingPermissions):
            await interaction.response.send_message(f"{Alert}", ephemeral=True)

client.run(TOKEN)
